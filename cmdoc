#!/usr/bin/python3

import argparse
import CommonMark
import re
import sys

html_prefix = '<!DOCTYPE html><html lang="de"><head><title>'

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Convert CommonMark/Markdown to HTML.')
    parser.add_argument('input', nargs='?', help='The file to convert. Default is stdin.')
    parser.add_argument('-o', '--output',   help='The output file. Default is stdout.')
#    parser.add_argument('-c', '--css',      help='A CSS file to include in the HTML. A default will be included if neither -c nor -f is used.')
#    parser.add_argument('-f', '--cssref',   help='A CSS file to reference in the HTML. A default will be included if neither -c nor -f is used.')
#    parser.add_argument('-x', '--nocss',    help='Do not include or reference any CSS.')
    parser.add_argument('-t', '--toc', action='store_true', help='Generate a table of contents.')
    args = parser.parse_args()

    markdown = ''
    if args.input:
        with open(args.input, 'r') as f:
            markdown = f.read()
    else:
        markdown = sys.stdin.read()

    html = '<!DOCTYPE html>\n<html>\n<head>\n<title>'
    if args.input:
        html += args.input
    else:
        html += 'Document'
    html += '</title>\n'

    html += '<style>\n'
    with open( 'default.css', 'r' ) as f:
        html += f.read()
    html += '</style>\n'

    html += '</head>\n<body>\n'
    body = CommonMark.commonmark(markdown)

    toc_cmark = ''
    id_set = set()
    pos = 0
    rx = re.compile('<h([1-6])>(.+)</h[1-6]>')
    while pos < len(body):
        m = rx.search(body, pos)
        if m:
            ident = m.group(2).replace(' ', '_')
            while ident in id_set:
                ident += '_'
            id_set.add(ident)
            body = body[:m.start()] + '<h' + m.group(1) + ' id="' + ident + '">' + m.group(2) + '</h' + m.group(1) + '>' + body[m.end():]
            pos = m.end() + 6 + len(ident)
            x = (int(m.group(1))-1)*4
            toc_cmark += ' '*x
            toc_cmark += '1. [' + m.group(2) + '](#' + ident + ')\n'
        else:
            break

    if args.toc:
        html += '<nav>\n' + CommonMark.commonmark(toc_cmark) + '</nav>\n'

    html += '<main>\n' + body + '</main>\n</body>\n</html>'

    if args.output:
        with open(args.output, 'w') as f:
            f.write(html)
    else:
        print(html)
